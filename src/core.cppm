module;
#include <cstdint>
#include <cstddef>
#include <variant>

export module core;

namespace chippit {
namespace constants {
export constexpr size_t display_width = 64u;
export constexpr size_t display_height = 32u;
} // namespace constants

export struct Chip8 {
    std::uint8_t V[16];
    std::uint16_t opcode;
    std::uint16_t I;
    std::uint16_t pc_;
    std::uint16_t stack_[16];
    std::uint16_t sp_;

    // TODO: may be separate classes, but there isn't much code
    std::uint8_t memory_[4096];
    std::uint8_t graphics_[constants::display_width * constants::display_height];

    std::uint8_t delay_timer_;
    std::uint8_t sound_timer_;

    // input
    std::uint8_t key_[16];

    static constexpr std::uint8_t fontset_[80] =
    {
        0xF0, 0x90, 0x90, 0x90, 0xF0, //0
        0x20, 0x60, 0x20, 0x20, 0x70, //1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, //2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, //3
        0x90, 0x90, 0xF0, 0x10, 0x10, //4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, //5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, //6
        0xF0, 0x10, 0x20, 0x40, 0x40, //7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, //8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, //9
        0xF0, 0x90, 0xF0, 0x90, 0x90, //A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, //B
        0xF0, 0x80, 0x80, 0x80, 0xF0, //C
        0xE0, 0x90, 0x90, 0x90, 0xE0, //D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, //E
        0xF0, 0x80, 0xF0, 0x80, 0x80  //F
    };
};
} // namespace chippit